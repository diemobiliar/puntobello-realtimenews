@import "./scss/_mixins.scss";
@import "~@fluentui/react/dist/sass/References.scss";

.newsFeed {
  body, p, h1, h2, h3, h4, h5, h6, li, a, span, div {
    font-family: var(--spfx_font_family) !important;
  }

  .highlightContainer {
    margin-bottom: 60px;

    @include mq($ms-screen-min-lg) {
      margin-bottom: 120px;
    }
  }

  .filterBar {
    display: flex;
    flex-direction: column;
    margin-top: -16px;
    margin-bottom: 32px;

    @include mq($ms-screen-min-lg) {
      flex-direction: row;
      align-items: center;
    }
  }

  .filterBarItem {
    margin-top: 16px;
    flex-grow: 1;
  }

  .overflowSet {
    @include mq($ms-screen-min-lg) {
      justify-content: flex-end;
    }
  }

  .overflowSetLink {
    margin-right: 12px;
    font-size: var(--spfx_generic_font_size);
    color: var(--spfx_theme_color_ui_primary);

    &:hover,
    &:focus {
      color: var(--spfx_theme_color_ui_dark_primary);
      text-decoration: none;
    }

    @include mq($ms-screen-min-lg) {
      margin-left: 24px;
      margin-right: 0;
    }
  }

  .dropdown {
    @include mq($ms-screen-min-lg) {
      max-width: 285px;
    }
  }

  .card {
    display: flex;
    flex-direction: column;
    min-width: 0;
    max-width: none;
    border: 0;
    transition-property: transform, box-shadow;
    transition-duration: 0.3s;
    transition-timing-function: ease;

    &:hover:after {
      border: 0;
    }

    @include mq($ms-screen-min-lg) {
      min-height: 230px;
    }
  }

  .cardHighlight {
    .details {
      border-radius: 0 0 var(--spfx_border_radius) var(--spfx_border_radius);
      background-color: var(--spfx_theme_color_ui_primary);
      color: var(--spfx_theme_color_ui_white);
    }

    .imageWrapper {
      border-radius: var(--spfx_border_radius) var(--spfx_border_radius) 0 0;
    }

    @include mq($until: $ms-screen-max-md) {
      border-radius: var(--spfx_border_radius);
      box-shadow: var(--spfx_card_box_shadow);

      &:hover {
        transform: translateY(-4px);
        box-shadow: var(--spfx_card_box_shadow_hover);
      }
    }

    @include mq($ms-screen-min-lg) {
      margin: 30px 0;

      &:hover {
        .details {
          transform: translateY(-4px);
          box-shadow: var(--spfx_card_box_shadow_hover);
        }
      }

      .details {
        position: relative;
        z-index: 1;
        width: 40%;
        border-radius: var(--spfx_border_radius);
        box-shadow: var(--spfx_card_box_shadow);
        transition:
          transform 0.3s ease,
          box-shadow 0.3s ease;
        backface-visibility: hidden;
        will-change: transform;
        &:hover {
          transform: scale(1.05);
          box-shadow: var(--spfx_card_box_shadow_hover);
        }
      }
      .imageWrapper {
        position: absolute;
        right: 0;
        top: -30px;
        bottom: -30px;
        width: 82%;
        border-radius: var(--spfx_border_radius);
        overflow: hidden;

        img {
          width: 100%;
          height: auto;
          border-radius: inherit;
          transition: transform 0.3s ease;
        }

        &:hover img {
          transform: scale(1.15);
        }
      }
    }
  }

  .details {
    justify-content: flex-start;
    padding: 20px;
    transition-property: transform, box-shadow;
    transition-duration: 0.15s;
    transition-timing-function: ease;
  }

  .title {
    @include text-line-clamp(2);

    height: auto;
    margin-bottom: 20px;
    padding: 0;
    font-size: var(--spfx_title_font_size);
    font-weight: bold;
    line-height: 1.2;
    letter-spacing: -0.01em;
    color: inherit;

    @include mq($ms-screen-min-lg) {
      font-size: var(--spfx_title_font_size);
      max-height: 75px;
    }
  }

  .subtitle {
    @include text-line-clamp(1);
    height: auto;
    margin-bottom: 20px;
    padding: 0;
    font-size: var(--spfx_generic_font_size);
    line-height: 1.2;
    color: inherit;
  }

  .text {
    @include text-line-clamp(4);

    font-size: var(--spfx_generic_font_size);
    line-height: 1.4;
    color: inherit;
  }

  .imageWrapper {
    position: relative;
    overflow: hidden;
  }

  .metaBarContainer {
    overflow: hidden;
    margin-top: auto;
    margin-bottom: -14px;
    padding-top: 20px;
  }

  .metaBar {
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: var(--spfx_generic_font_size);
    color: var(--spfx_theme_color_ui_white);
  }

  .metaBarText {
    color: inherit;
  }

  .commandBar {
    flex-grow: 1;
  }
}

.newsletterList {
  .linkNewsItem {
    text-decoration: "none";
  }

  .card {
    overflow: hidden;
    display: flex;
    flex-direction: column;
    min-width: 0;
    max-width: none;
    border: 0;
    border-radius: var(--spfx_border_radius);
    box-shadow: var(--spfx_card_box_shadow);
    transition-property: transform, box-shadow;
    transition-duration: 0.15s;
    transition-timing-function: ease;
    position: relative; // Make sure the pseudo-element is positioned correctly

    &:hover {
      transform: rotateY(6deg) rotateX(3deg);
      box-shadow: var(--spfx_card_box_shadow_hover);
    }

    // Pseudo-element for the light sweep effect
    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: -150%;
      width: 150%;
      height: 100%;
      background: linear-gradient(120deg, rgba(255, 255, 255, 0.3) 0%, rgba(255, 255, 255, 0) 60%);
      transition: opacity 0.35s ease;
      opacity: 0;
    }

    // Light sweep effect on hover
    &:hover::before {
      opacity: 1;
      left: 100%;
      transition:
        left 0.8s ease,
        opacity 0.8s ease;
    }

    @include mq($ms-screen-min-lg) {
      min-height: 230px;
      flex-direction: row;
    }
  }

  .details {
    justify-content: flex-start;
    padding: 20px;
  }

  .title {
    overflow: hidden;
    height: auto;
    max-height: 62px;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    margin-bottom: 15px;
    padding: 0;
    font-size: var(--spfx_title_font_size);
    font-weight: bold;
    line-height: 1.3;
    letter-spacing: -0.01em;
    color: var(--spfx_theme_color_ui_black);
  }

  .subtitle {
    height: 18px;
    margin-bottom: 15px;
    padding: 0;
    font-size: var(--spfx_generic_font_size);
    line-height: 1;
    color: var(--spfx_theme_color_ui_dark_grey);
  }

  .text {
    overflow: hidden;
    max-height: 100px;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 4;
    font-size: var(--spfx_generic_font_size);
    line-height: 1.4;
    color: var(--spfx_theme_color_ui_black);
  }

  .imageWrapper {
    position: relative;

    @include mq($ms-screen-min-lg) {
      max-width: 50%;
    }
  }

  .imageMeta {
    position: absolute;
    top: 0;
    left: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 72px;
    height: 72px;
    padding: 0.2em;
    font-size: var(--spfx_generic_font_size);
    letter-spacing: 0.02em;
    background-color: var(--spfx_theme_color_ui_primary);
    color: var(--spfx_theme_color_ui_white);
  }

  .metaBarContainer {
    overflow: hidden;
    margin-top: auto;
    margin-bottom: -14px;
    padding-top: 20px;
  }

  .metaBar {
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: var(--spfx_generic_font_size);
    color: var(--spfx_theme_color_ui_dark_grey);
  }

  .commandBar {
    flex-grow: 1;
  }
}

.systemMessage {
  box-sizing: border-box;
  position: absolute;
  z-index: $ms-zIndex-1;
  top: 0;
  left: 0;
  width: 100%;
  min-width: 0;
  max-width: none;
  padding: 20px;
  border-radius: var(--spfx_border_radius);
  box-shadow: var(--spfx_system_message_box_shadow);

  @include mq($ms-screen-min-lg) {
    padding: 12px 20px 12px 64px;
  }

  .title {
    height: auto;
    margin-top: -0.1em;
    margin-bottom: 18px;
    padding: 0;
    font-size: var(--spfx_generic_font_size);
    font-weight: 500;
    line-height: 1.3;
    color: var(--spfx_theme_color_ui_black);
  }

  .details {
    position: relative;
    padding-left: 28px;
  }

  .icon {
    position: absolute;
    left: 0;
    font-size: x-large;
    color: var(--spfx_theme_color_ui_primary);
    animation: tiltRinger 1.8s infinite ease-in-out;
  }

  .button {
    align-self: flex-start;
    max-width: 100%;
    height: auto;
    padding: 14px 32px;
    border: 0;
    border-radius: var(--spfx_border_radius);
    font-size: var(--spfx_generic_font_size);
    line-height: 1.3;
    background-color: var(--spfx_theme_color_ui_primary);
    color: var(--spfx_theme_color_ui_white);
    position: relative; // Ensure the pseudo-element is positioned correctly
    overflow: hidden; // Ensure the pseudo-element does not overflow the button

    &:hover {
      background-color: var(--spfx_theme_color_ui_dark_primary);
      color: var(--spfx_theme_color_ui_white);
    }

    // Pseudo-element for the shiny effect
    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: -100%;
      width: 200%;
      height: 100%;
      background: linear-gradient(
        to right,
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 0.4) 50%,
        rgba(255, 255, 255, 0) 100%
      );
      transition: opacity 0.3s ease;
      opacity: 0;
    }

    // Hover effect to trigger the shiny animation
    &:hover::after {
      opacity: 1;
      animation: buttonshine 0.75s ease;
    }

    // Media query adjustments
    @include mq($ms-screen-min-lg) {
      padding: 16px 50px;
    }
  }

  // Keyframe animation for the shiny effect
  @keyframes buttonshine {
    from {
      left: -100%;
    }
    to {
      left: 100%;
    }
  }
  // Keyframe animation for tilting the ringer icon
  @keyframes tiltRinger {
    0%,
    100% {
      transform: rotate(0deg);
    }
    10% {
      transform: rotate(10deg);
    }
    20% {
      transform: rotate(15deg);
    }
    30% {
      transform: rotate(10deg);
    }
    40% {
      transform: rotate(5deg);
    }
    50% {
      transform: rotate(0deg);
    }
    60% {
      transform: rotate(-5deg);
    }
    70% {
      transform: rotate(-10deg);
    }
    80% {
      transform: rotate(-15deg);
    }
    90% {
      transform: rotate(-10deg);
    }
    100% {
      transform: rotate(0deg);
    }
  }
}
